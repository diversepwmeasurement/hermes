jobs:
  release:
    environment: ci
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      env:
        FORCE_VERSION: ${{ github.event.inputs.forceVersion }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref == 'refs/heads/master'
      name: Release
      run: ./gradlew release -Prelease.customPassword=${GITHUB_TOKEN} -Prelease.customUsername=${GITHUB_ACTOR}
        -Prelease.forceVersion=${FORCE_VERSION}
    - continue-on-error: true
      id: next-version
      name: Log new version
      run: 'NEW_HERMES_VERSION="`./gradlew -q cV -Prelease.quiet`"

        echo "new_hermes_version=$NEW_HERMES_VERSION" >> $GITHUB_OUTPUT

        echo "New Hermes version: ${NEW_HERMES_VERSION}"

        '
    - continue-on-error: true
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PRIVATE_KEY_PASSWORD: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      name: Publish to Sonatype
      run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ github.token }}
      if: github.ref == 'refs/heads/master'
      name: Generate GitHub release page
      run: gh release create "hermes-${{ steps.next-version.outputs.new_hermes_version
        }}" --generate-notes
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
